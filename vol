#!/bin/bash

###############################################################################
# 
# vol - a script to get and set system volume parameters from the command line
#       command line.
#
# $Source: /Users/dan/bin/RCS/vol-v $
# $Date: 2011-09-28 21:06:35-07 $
# $Revision: 1.2 $
#
###############################################################################

###############################################################################
# Functions
###############################################################################

function usage() {
    echo "Usage: vol [verb [value]]"
    echo "       vol value"; echo
    echo "where verb is show, set, get, push, pop, mute, off, unmute, on"
    echo "      value is [0-100]"; echo
    echo "Note that using 'set' or 'value' also unmutes."; echo
    exit 1
}

###############################################################################
# Settings
###############################################################################

osa="/usr/bin/osascript -e"
stk=/tmp/volstack

###############################################################################
# Code
###############################################################################

# Get the system volume settings
val="$(${osa} 'get (output volume of (get volume settings))')"
mute="$(${osa} 'get (output muted of (get volume settings))')"
[[ "${mute}" == "true" ]] && mute="muted" || mute="unmuted"

# If no parameters supplied, then simply show the state
if [[ ! ${1} ]]; then echo "${val} ${mute}"; exit 0; fi

verb=${1}; newval=${1}

# If first argument is a number, treat it as a set with the value
[[ ! $(echo ${newval} | sed 's/[[:digit:]]//g') ]] && verb=set

case "${verb}" in
    show)      echo "${val} ${mute}";;
    set)       ${osa} 'set volume without output muted'
	       ${osa} "set volume output volume ${newval}";;
    get)       echo "${val} ${mute}";;
    push)      echo "${val} ${mute}" >> "${stk}";;
    pop)       v=$(tail -n1 "${stk}" 2> /dev/null | cut -f1 -d' ')
	       m=$(tail -n1 "${stk}" 2> /dev/null | cut -f2 -d' ')
	       [[ (! ${v}) || (! ${m}) ]] && exit 0
	       [[ ${m} == muted ]] && m="with" || m="without"
	       ${osa} "set volume output volume ${v}"
	       ${osa} "set volume ${m} output muted"
	       head -n $(( $(cat ${stk} 2> /dev/null | wc -l) - 1 )) \
		   ${stk} 2> /dev/null > ${stk}2
	       mv ${stk}2 ${stk};;
    off|mute)  ${osa} 'set volume with output muted';;
    on|unmute) ${osa} 'set volume without output muted';;
    up)        ${osa} 'set volume without output muted'
	       ${osa} "set volume output volume $((${val}+10))";;
    down)      ${osa} 'set volume without output muted'
	       ${osa} "set volume output volume $((${val}-10))";;
    *)         usage;;
esac
