#!/usr/bin/env bash

###############################################################################
# 
# vol - a script to get and set system volume parameters from the command line
#       command line.
#
###############################################################################

###############################################################################
# Settings
###############################################################################

osa="/usr/bin/osascript -e"
stk=/tmp/volstack

###############################################################################
# Functions
###############################################################################

function usage() {
    echo "Usage: vol [verb [value]]"
    echo "       vol value"; echo
    echo "where verb is show, set, get, push, pop, mute, off, unmute, on, down, up, nap"
    echo "      value is [0-100]"; echo
    echo "Note that using 'set' or 'value' also unmutes the sound.  Nap is in minutes, default 30 minutes."
    echo "Down or up will decrease or increase by 10%.  Off and mute are the same, as are on and unmute."
    exit 1
}

function execute() {
    verb="${1}"; newval=${2}
    case "${verb}" in
	"show")        echo "${val} ${mute}";;
	"set")         ${osa} 'set volume without output muted'
	               ${osa} "set volume output volume ${newval}";;
	"get")         echo "${val} ${mute}";;
	"push")        echo "${val} ${mute}" >> "${stk}";;
	"pop")         v=$(tail -n1 "${stk}" 2> /dev/null | cut -f1 -d' ')
                       m=$(tail -n1 "${stk}" 2> /dev/null | cut -f2 -d' ')
                       [[ (! ${v}) || (! ${m}) ]] && exit 0
                       [[ ${m} == muted ]] && m="with" || m="without"
                       ${osa} "set volume output volume ${v}"
                       ${osa} "set volume ${m} output muted"
                       head -n $(( $(cat ${stk} 2> /dev/null | wc -l) - 1 )) \
			    ${stk} 2> /dev/null > ${stk}2
                       mv ${stk}2 ${stk};;
	"off"|"mute")  ${osa} 'set volume with output muted';;
	"on"|"unmute") ${osa} 'set volume without output muted';;
	"up")          ${osa} 'set volume without output muted'
	               ${osa} "set volume output volume $((${val}+10))";;
	"down")        ${osa} 'set volume without output muted'
	               ${osa} "set volume output volume $((${val}-10))";;
	"nap")         [[ ! ${newval} ]] && newval=30
		       execute push ${newval}
		       execute mute ${newval}
		       (sleep $(( ${newval} * 60 )); ${0} pop) &;;
	*)             usage;;
    esac
}

###############################################################################
# Code
###############################################################################

# Get the system volume settings
val="$(${osa} 'get (output volume of (get volume settings))')"
mute="$(${osa} 'get (output muted of (get volume settings))')"
[[ "${mute}" == "true" ]] && mute="muted" || mute="unmuted"

# If no parameters supplied, then simply show the state
if [[ ! ${1} ]]; then echo "${val} ${mute}"; exit 0; fi

verb="${1}"; newval="${2}"

# If first argument is a number, treat it as a set with the value
[[ ! $(echo ${verb} | sed 's/[[:digit:]]//g') ]] && verb="set" && newval=${1}

execute ${verb} ${newval}
